id: configure_agent
learningObjectives:
- Setting up monitoring 
hints:
- Make sure all relevant files were added to the PR
- Make sure you've deleted the `license_key` from the config files
startFlow:
  do:
  - actionId: bot_message
    params:
      person: devops
    paramsFramework:
      node:
        messages:
        - text: Now it’s really time to add New Relic to your **backend** deployed app.
          delay: 1000
        - text: It’s a relatively straightforward process, that begins [here](https://docs.newrelic.com/docs/apm/agents/nodejs-agent/installation-configuration/install-nodejs-agent/).
          delay: 1700
        - text: Follow the “Install the Node.js agent” instructions and when you’re done, **open a PR** and I’ll take a look.
          delay: 1000
        - text: "Oh and by the way - we're using **`yarn`** and not `npm`."
          delay: 1300
      rails:
        messages:
        - text: Now it’s really time to add New Relic to your **backend** deployed app.
          delay: 1000
        - text: It’s a relatively straightforward process, that begins [here](https://docs.newrelic.com/docs/apm/agents/ruby-agent/installation/install-new-relic-ruby-agent#Installing_the_Gem).
          delay: 1500
        - text: Follow the “Install the gem” and then “Install the configuration file” instructions, and when you’re done, **open a PR** and I’ll take a look.
          delay: 1000
      python:
        messages:
        - text: Now it’s really time to add New Relic to your **backend** deployed app.
          delay: 1000
        - text: It’s a relatively straightforward process, that begins [here](https://docs.newrelic.com/docs/apm/agents/python-agent/installation/standard-python-agent-install/#install).
          delay: 1500
        - text: "Follow the “Standard Python agent install” instructions.\n\nOh and by the way - we're using **`poetry`** and not `pip` directly. Instead of the part that says `pip install newrelic` be sure to use the `poetry add newrelic` command for adding a new package.\n\nAlso, once you have it installed, you should stop `docker-compose` and then rerun it to have it update the appropriate `requirements.txt` file.\n\nFinally, make sure you update how we run the app in K8s (hint: look at the backend deployment chart in the repository) and make sure you add the necessary New Relic admin script command, as per their instructions.\n\nWhen you’re done, **open a PR** and I’ll take a look."
          delay: 3000
trigger:
  type: github_pr_lifecycle_status
  flowNode:
    switch:
      key: ${eventType}
      cases:
        github_pr_opened:
          do:
          - actionId: bot_message
            params:
              person: devops
              messages:
              - text: Checking now
                delay: 1000
          - actionId: github_pr_comment
            params:
              person: devops
              message: Checking now.
        github_pr_workflow_complete_success:
          if:
            conditions:
            - conditionId: github_is_file_modified
              paramsFramework:
                node:
                  fileName: backend/app.js
              onFalseParams:
                pr_reject_message: Did you make sure you added the `require` statement to the main app file?
                pr_reject_message_name: missing_require

            - conditionId: github_is_file_modified
              paramsFramework:
                python:
                  fileName: charts/templates/anythink-backend-deployment.yaml
              onFalseParams:
                pr_reject_message: Looks like you did not update the `anythink-backend-deployment.yaml`. Remember you need to add the New Relic admin script command in front of your usual startup command options.
                pr_reject_message_name: deployment_yaml_not_updated

            - conditionId: github_is_file_modified
              paramsFramework:
                node:
                  fileName: backend/package.json
                rails:
                  fileName: backend/Gemfile
                python:
                  fileName: backend/requirements.txt
              onFalseParams:
                pr_reject_message: Did you add the New Relic package to the dependency list? Make sure to add it to the **backend** project.
                pr_reject_message_name: missing_dependency

            - conditionId: github_is_file_added
              paramsFramework:
                node:
                  fileName: backend/newrelic.js
                rails:
                  fileName: backend/config/newrelic.yml
                python:
                  fileName: backend/newrelic.ini
              onFalseParams:
                pr_reject_message: I don’t see a New Relic config file. Won’t work without it.
                pr_reject_message_name: missing_config

            - conditionId: github_does_file_contain
              equals: false
              params:
                regex: license_key
              paramsFramework:
                node:
                  fileName: backend/newrelic.js
                rails:
                  fileName: backend/config/newrelic.yml
                python:
                  fileName: backend/newrelic.ini
              onFalseParams:
                pr_reject_message: "**Please delete the license key field and its value, also don't leave it commented out.** Keeping licesce key in the committed code is considered bad practice, security wise."
                pr_reject_message_name: committed_license_key

            - conditionId: github_is_file_added
              equals: false
              paramsFramework:
                node:
                  fileName: backend/package-lock.json
              onFalseParams:
                pr_reject_message: I see you have both `package-lock.json` and `yarn.lock`. This can cause issues in the build. Let’s stick with just yarn for now, and remove the `package-lock.json`.
                pr_reject_message_name: npm_lock_added

            then:
              do:
              - actionId: bot_message
                params:
                  person: devops
                  messages:
                  - text: Looking good! You can merge the PR now.
                    delay: 1000
              - actionId: github_pr_approve
                params:
                  person: devops
                  message: Looking good! You can merge the PR now.

            else:
              do:
              - actionId: bot_message
                params:
                  person: devops
                  messages:
                  - text: ${pr_reject_message}
                    delay: 1000
              - actionId: github_pr_reject
                params:
                  person: devops
                  message: ${pr_reject_message}
                  messageName: ${pr_reject_message_name}

        github_pr_merged:
          do:
          - actionId: finish_step
