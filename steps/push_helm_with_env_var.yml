id: push_helm_with_env_var
learningObjectives:
- Updating the deployed environment
hints:
- An environment variable can reference a secret by creating an environment variable with the `valueFrom` field that point to a `secretKeyRef` field. More info can be found in this [guide](https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables)
startFlow:
  do:
    - actionId: bot_message
      params:
        person: devops
        messages:
          - text: Now we need to set the New Relic environment variables in our backend pods, so the agent can start properly and send data to New Relic.
            delay: 0
          - text: Weâ€™ll need two variables -
            delay: 1000
          - text: "`NEW_RELIC_LICENSE_KEY` - which will store our `INGEST` API key"
            delay: 1000
          - text: "`NEW_RELIC_APP_NAME` - the name of the application we want to monitor"
            delay: 1000
          - text: We shall introduce these two environment variables by updating the relevant helm chart, in charge of the deployment config.
            delay: 1000
          - text: "Go ahead to `charts/templates/anythink-backend-deployment.yaml` and add the variables as follows:"
            delay: 1000
          - text: The first, should be a reference to the secret we've just created, `new-relic-license-key`
            delay: 1000
          - text: The second, should be a regular environment variable
            delay: 1000
          - text: Go ahead and open a PR with these changes.
            delay: 1000

trigger:
  type: github_pr_lifecycle_status
  flowNode:
    switch:
      key: ${eventType}
      cases:
        github_pr_opened:
          do:
          - actionId: bot_message
            params:
              person: devops
              messages:
              - text: Checking now
                delay: 1000
          - actionId: github_pr_comment
            params:
              person: devops
              message: Checking now.
        github_pr_workflow_complete_success:
          if:
            conditions:
            - conditionId: github_is_file_modified
              paramsFramework:
                node:
                  fileName: charts/templates/anythink-backend-deployment.yaml
              onFalseParams:
                pr_reject_message: Did you make sure you've added the environment variables to the relevant deployment yml?
                pr_reject_message_name: missing_env_var
            - conditionId: github_does_file_contain
              equals: true
              params:
                regex: NEW_RELIC_LICENSE_KEY
                fileName: charts/templates/anythink-backend-deployment.yaml
              onFalseParams:
                pr_reject_message: It looks like you the environment variable `NEW_RELIC_LICENSE_KEY` is missing in your deployment yaml
                pr_reject_message_name: missing_license_key_env_var
            - conditionId: github_does_file_contain
              equals: true
              params:
                regex: secretKeyRef
                fileName: charts/templates/anythink-backend-deployment.yaml
              onFalseParams:
                pr_reject_message: Did you make sure the `NEW_RELIC_LICENSE_KEY` environment variable is referencing a key named `new-relic-license-key`
                pr_reject_message_name: missing_secret_reference
            - conditionId: github_does_file_contain
              equals: true
              params:
                regex: NEW_RELIC_APP_NAME
                fileName: charts/templates/anythink-backend-deployment.yaml
              onFalseParams:
                pr_reject_message: It looks like you the environment variable `NEW_RELIC_APP_NAME` is missing in your deployment yaml
                pr_reject_message_name: missing_app_name_env_var
            then:
              do:
              - actionId: bot_message
                params:
                  person: devops
                  messages:
                  - text: Looking good! You can merge the PR now.
                    delay: 1000
              - actionId: github_pr_approve
                params:
                  person: devops
                  message: Looking good! You can merge the PR now.
            else:
              do:
              - actionId: bot_message
                params:
                  person: devops
                  messages:
                  - text: ${pr_reject_message}
                    delay: 1000
              - actionId: github_pr_reject
                params:
                  person: devops
                  message: ${pr_reject_message}
                  messageName: ${pr_reject_message_name}

        github_pr_merged:
          do:
          - actionId: bot_message
            params:
              person: devops
              messages:
                - text: Great, and in a few minutes from now, your app will be soon deployed and monitored!
                  delay: 1000
          - actionId: finish_step

